 server {

        root /var/www/dev.remedly.com/html;
        index silex.php index.php index.html index.htm;
        server_name dev.remedly.com;
        error_log /var/www/dev.remedly.com/log/nginx-error.log error;
        access_log /var/www/dev.remedly.com/log/nginx-access.log;
        rewrite_log on;
        if ($host != "dev.remedly.com") {
          return 404;
        }


        client_max_body_size 100m;

        location ~ \.php$ {
        try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass  unix:/run/php/php7.4-fpm.sock;
            fastcgi_index index.php;
            # send bad requests to 404
            fastcgi_intercept_errors on;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_buffer_size 256k;
            fastcgi_buffers 4 256k;
            fastcgi_read_timeout 300;

         }

        location ~ (\.yml$|\.md$|\.gitignore$|Makefile$|\.sample$|/\.git/.*) {
            return 404;
        }

        location /edit-procedure-list {
          rewrite ^(.*)$ /settings/treatments/list redirect;
        }
   location / {
          rewrite ^/(admin-dashboard|chart-note-template|contact-us|marketing-materials|marketing-view)$ /index.php last;
          rewrite ^/(md|phrase-macros|op-note-template|password-reminder|patient-form-view|quotation-templates|results-\d)$ /index.php last;
          rewrite ^/(staff-dashboard|step-\d|before-after-(build|view))$ /index.php last;
          rewrite ^/billers-manager|chs-files-manager|(biller-(dashboard|update)|consultation-(templates|step-\d|view-\d))$ /index.php last;
          rewrite ^/(manage-(patient-forms|templates|staff)|pre-procedure-(consult-\d|instructions))$ /index.php last;
          rewrite ^/(preferences|patient-(categories|activity)|insurance-claims)$ /index.php last;
          rewrite ^/md-(dashboard|message|qa-template|step-\d|update|subscription)$ /index.php last;
          rewrite ^/(practice-performance|new-patient)$ /index.php last;
          rewrite ^/(data-transfer|manageProvider|insuranceReport|staff-update|emailFromList)$ /index.php last;
          rewrite ^/report.pdf$ /php/PDFgenerate.php last;
          rewrite ^/(patient-portal/self-schedule.*) /patient-portal-sources/build/index.html last;

          if ($request_filename ~ password-reset){
            rewrite ^(.*)$ /password-reset.php last;
          }

          if ($request_filename ~ unsubscribe-email){
            rewrite ^(.*)$ /unsubscribe.php last;
          }
          rewrite ^/(calendar-dev.*|calendar-settings.*|demo.*|practice-profile|financial-holds.*|financial-payments\/split.*|appointment-recovery|automated-actions|preview-template|self-schedule|appointment-audit-log) /site/build/index.html last;

          if ($request_uri ~ "^/site/(?!build/).*$"){
            rewrite ^/site/(.*)$ /site/build/site/$1 break;
          }

          if (!-e $request_filename){
            rewrite ^(.*)$ /silex.php last;
          }
        }


         location ~ /\.ht {
                 deny all;
         }

        location ~ ^/(tools|data|tcpdf/tools|vendor/tecnickcom/tcpdf/tools)/ {
             deny all;
             return 403;
         }



         location = /favicon.ico {
                         log_not_found off;
                         access_log off;
         }
         location = /tmstmp  {
               types { } default_type "text/plain; charset=utf-8";
               add_header x-robots-tag "noindex, follow";
               add_header Content-Type text/plain;
         }


        location = /robots.txt {
                        allow all;
                        log_not_found off;
                        access_log off;
        }

        location ~\.(sh|log)$ {
               deny all;
               error_page 403 =404 / ;
        }
        location /user-login {
               return 302 /$is_args$args;
        }

        location /selenium {
        proxy_pass http://localhost:8080;
        }



    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dev.remedly.com-0002/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dev.remedly.com-0002/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


    #ssl_session_cache shared:le_nginx_SSL:1m;
    #ssl_session_timeout 1440m;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    #ssl_certificate  /etc/ssl/certs/remedly_bundle.crt;
    #ssl_certificate_key  /etc/ssl/private/remedly.com.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;


 # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
#    ssl_trusted_certificate /etc/ssl/certs/COMODO_RootCA_Intermediate.crt;
#     ssl_trusted_certificate  /etc/ssl/certs/STAR_remedly_com.ca-bundle.pem;
#     ssl_trusted_certificate  /etc/ssl/certs/comodo-chain.pem;


}
server {
    if ($host = dev.remedly.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen   80;

        server_name dev.remedly.com;
    return 404; # managed by Certbot


